{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customVmName": {
      "type": "string",
      "defaultValue": "testarin",
      "metadata": {
        "description": "This is the name of the your VM"
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "007pqzkn75ztrjmagntpri0",
      "metadata": {
        "description": "Provide the existing storage account name"
      }
    },
    "diagnosticsStorageAccountResourceGroupName": {
      "type": "string",
      "defaultValue": "dcos-ci",
      "metadata": {
        "description": "Resource group of the existing storage account"
      }
    },
    "imageName": {
      "type": "string",
      "defaultValue": "testarind",
      "metadata": {
        "description": "Name of your Image"
      }
    },

    "osDiskVhdUri": {
      "type": "string",
      "defaultValue": "https://007pqzkn75ztrjmagntpri0.blob.core.windows.net/system/Microsoft.Compute/Images/basedcos/dcos-osDisk.6ff742c1-c5e2-423d-a90a-1d1e6665d8af.vhd",
      "metadata": {
        "description": "Uri of the your user image"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "dinor",
      "metadata": {
        "description": "User Name for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Corp123!!!!!",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "osType": {
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "type": "string",
      "defaultValue": "Linux",
      "metadata": {
        "description": "This is the OS that your VM will be running"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A4",
      "metadata": {
        "description": "This is the size of your VM"
      }
    },

    "ExistingVnetName": {
      "type": "string",
      "defaultValue": "dcos-vnet-626FF119",
      "metadata": {
        "description": "New or Existing VNet Name"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "dcos-masterSubnet",
      "metadata": {
        "description": "New or Existing subnet Name"
      }
    },
    "adminPublicKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCz7gkqOUUUlCObjgevthzsfFEUGPxm/8+tQYqDXQ/Z0aCOB25cvSHepTWPb0fFJ8fCqp/+9mxJg8tR6XY7nliZ8ioH3j3yBphgzPAkPmoX1fEe05TPm3RQQiQiljZPiKhnxnDI9kCyPI/Fp7cmhklEDFN9aMy/0/3Jx87pIktS0KPC9U/WMrtmNr/0LeKva/0+NgvJkm3mcqAFBH3pBVsnVQrGObp7cHXVXZAas6mjhqsTLjs52T1OQkRtilZsjV9kjvD5qU9tfKRVFBLZGIsVZsCGN4+i3R0UfrCRG6EYqezLZMMf5B5jCugD68kEVPSbsccMVijPDbLWmqIlLX45",
      "metadata": {
        "description": "SSH Key for the Virtual Machine"
      }
    },
    "existingRecoveryServicesVault": {
      "type": "string",
      "defaultValue": "vault1",
      "metadata": {
        "description": "Recovery Vault Name"
      }
    },
  
    "existingBackupPolicy": {
      "type": "string",
      "defaultValue": "DefaultPolicy",

      "metadata": {
        "description": "Recovery Policy Name"
      }
    },
    "VirtualMachinesResourceGroup": {
      "type": "string",
      "defaultValue": "dcos-ci",
      "metadata": {
        "description": "This is the name of the ResourceGroup Name"
      }
    },

    "availabilitySetName": {
      "type": "string",
      "defaultValue": "aravset",
      "metadata": {
        "description": "This is the Availability Set"
      }
    },
    "aadClientID": {
      "type": "string",
      "defaultValue": "********",
      "metadata": {
        "description": "This is the ClientID of the AAD application used to intergate with KeyVault"
      }
    },
    "aadClientSecret": {
      "type": "securestring",
      "defaultValue": "************",
      "metadata": {
        "description": "This is the Client Secret of the above mentioned AAD Client"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "mykv1",
      "metadata": {
        "description": "This is the name of the keyVault"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "sql1",
      "metadata": {
        "description": "This is the name of the ResourceGroup in which KeyVault exist"
      }
    },
    "useKek": {
      "type": "string",
      "defaultValue": "kek",

      "metadata": {
        "description": "This is the Key Encryption Key"
      }
    },
    "keyEncryptionKeyURL": {
      "type": "string",
      "defaultValue": "https://mykv1.vault.azure.net/keys/keyencryptionkey/3dff907e65664ab692ef229468147e20",
      "metadata": {
        "description": "This is the URL of KEK"
      }
    },
    "encryptionOperation": {
      "type": "string",
      "defaultValue": "EnableEncryption",
      "metadata": {
        "description": "EnableEncryption would encrypt the disks in place and EnableEncryptionFormat would format the disks directly"
      }
    },
    "volumeType": {
      "type": "string",
      "defaultValue": "All",
      "metadata": {
        "description": "Defines which drives should be encrypted. OS encryption is supported on RHEL 7.2, CentOS 7.2 & Ubuntu 16.04."
      }
    },
    "sequenceVersion": {
      "type": "string",
      "metadata": {
        "description": "sequence version of the bitlocker operation. Increment this everytime an operation is performed on the same VM"
      }
    }
  },
  "variables": {
    "vmName": "[parameters('customVmName')]",
    "osDiskName": "[concat(parameters('customVmName'),'-OSDisk')]",
    "nicName": "[concat(parameters('customVmName'),'Nic')]",
    "apiVersion": "2015-06-15",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('ExistingVnetName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "backupFabric": "Azure",
    "v2VmType": "Microsoft.Compute/virtualMachines",
    "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
    "v2Vm": "vm;iaasvmcontainerv2;",
    "vmExtensionName": "MicrosoftMonitoringAgent"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/images",
      "apiVersion": "2016-04-30-preview",
      "name": "[parameters('imageName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "[parameters('osType')]",
            "osState": "Generalized",
            "blobUri": "[parameters('osDiskVhdUri')]",
            "storageAccountType": "Standard_LRS"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId('Microsoft.Compute/images', parameters('imageName'))]"
          },
          "osDisk": {
            "name": "[variables('osDiskName')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(resourceId(parameters('diagnosticsStorageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob)]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.Compute/images/', parameters('imageName'))]"
      ]
    },
    {
      "name": "[concat(parameters('existingRecoveryServicesVault'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('VirtualMachinesResourceGroup'),';',parameters('customVmName')), '/', variables('v2Vm'), concat(parameters('VirtualMachinesResourceGroup'),';',parameters('customVmName')))]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('VmName'))]"
      ],
      "properties": {
        "protectedItemType": "[variables('v2VmType')]",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies',parameters('existingRecoveryServicesVault'),parameters('existingBackupPolicy') )]",
        "sourceResourceId": "[resourceId(subscription().subscriptionId,parameters('VirtualMachinesResourceGroup'),'Microsoft.Compute/virtualMachines',parameters('customVmName'))]"
      }
    },
    
    {
      "name": "UpdateEncryptionSettings",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-encrypt-running-linux-vm/azuredeploy.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "aadClientID": {
            "value": "[parameters('aadClientID')]"
          },
          "aadClientSecret": {
            "value": "[parameters('aadClientSecret')]"
          },
          "encryptionOperation": {
            "value": "[parameters('encryptionOperation')]"
          },
          "volumeType": {
            "value": "[parameters('volumeType')]"
          },
          "keyEncryptionKeyURL": {
            "value": "[parameters('keyEncryptionKeyURL')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          },
          "sequenceVersion": {
            "value": "[parameters('sequenceVersion')]"
          },
          "useKek": {
            "value": "[parameters('useKek')]"
          },
          "vmName": {
            "value": "[variables('vmName')]"
          }
        }
      }
    }
  ]
}